{"name":"File Locator","tagline":"A simple file locator library.","body":"File Locator\r\n============\r\n\r\n[![Build Status](https://travis-ci.org/herrera-io/php-file-locator.png)](http://travis-ci.org/herrera-io/php-file-locator)\r\n\r\nA simple file locator library.\r\n\r\nSummary\r\n-------\r\n\r\nThe **FileLocator** library was created to provide file locating capabilities to a larger project. It can be used in templating engines, configuration file loaders, and more.\r\n\r\nInstallation\r\n------------\r\n\r\nAdd it to your list of Composer dependencies:\r\n\r\n```sh\r\n$ composer require herrera-io/file-locator=1.*\r\n```\r\n\r\nUsage\r\n-----\r\n\r\nThe library includes `FileSystemLocator`, which can be used to search one or more directory paths. Either a single directory path, or an array of paths may be passed to the constructor.\r\n\r\n```php\r\n<?php\r\n\r\nuse Herrera\\FileLocator\\Locator\\FileSystemLocator;\r\n\r\n$locator = new FileSystemLocator('/path/to/dir');\r\n$locator = new FileSystemLocator(array(\r\n    '/path/to/dir1',\r\n    '/path/to/dir2',\r\n    '/path/to/dir3' // etc\r\n));\r\n\r\n$file = $locator->locate('file.ini'); // return the first \"file.ini\" found\r\n$files = $locator->locate('file.ini', false); // find all named \"file.ini\"\r\n```\r\n\r\nYou can also create your own custom file locator by implementing the interface, `LocatorInterface`. All locator classes bundled in the library also implement this interface, allowing drop-in replacement.\r\n\r\n```php\r\n<?php\r\n\r\nuse Herrera\\FileLocator\\Locator\\LocatorInterface;\r\n\r\nclass MyLocator implements LocatorInterface\r\n{\r\n    public function locate($file, $first = true)\r\n    {\r\n        // do something to locate $file\r\n\r\n        // if $first is true, return the first matching result\r\n            // if nothing is found, return null\r\n\r\n        // if $first is false, generate a list of found $file(s) and return it\r\n            // if nothing is found, return an empty array\r\n    }\r\n}\r\n```\r\n\r\nYou may use one or more file locator classes together by using the `Collection` class. This can be used to chain together one or more file locators, and may be used in place of an actual file locator.\r\n\r\n```php\r\n<?php\r\n\r\nuse Herrera\\FileLocator\\Collection;\r\nuse Herrera\\FileLocator\\Locator\\FileSystemLocator;\r\nuse My\\Library\\CustomLocator;\r\n\r\n$locators = new Collection();\r\n$locators->add(new FileSystemLocator('/path/to/dir'));\r\n$locators->add(new CustomLocator());\r\n\r\n$file = $locator->locate('file.ini'); // return the first \"file.ini\" found\r\n$files = $locator->locate('file.ini', false); // find all named \"file.ini\"\r\n```","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}